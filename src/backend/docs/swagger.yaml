definitions:
  models.AddNewStudentRequestMessage:
    properties:
      group:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      studentNumber:
        type: string
      surname:
        type: string
    type: object
  models.AddNewThingRequestMessage:
    properties:
      markNumber:
        type: integer
      thingType:
        type: string
    type: object
  models.ChangeStudentGroupRequestMessage:
    properties:
      newGroup:
        type: string
    type: object
  models.SettleInRoomRequestMessage:
    properties:
      roomID:
        type: integer
    type: object
  models.ShortResponseMessage:
    properties:
      comment:
        type: string
    type: object
  models.ThingFullInfo:
    properties:
      room:
        $ref: '#/definitions/objects.Room'
        type: object
      thing:
        $ref: '#/definitions/objects.Thing'
        type: object
    type: object
  models.TransferThingRequestMessage:
    properties:
      room-id:
        type: integer
    type: object
  objects.Room:
    properties:
      id:
        type: integer
      roomNumber:
        type: integer
      roomType:
        type: string
    type: object
  objects.Student:
    properties:
      accID:
        type: integer
      id:
        type: integer
      name:
        type: string
      roomID:
        type: integer
      studentGroup:
        type: string
      studentNumber:
        type: string
      surname:
        type: string
    type: object
  objects.StudentResponseDTO:
    properties:
      name:
        type: string
      studentGroup:
        type: string
      studentNumber:
        type: string
      surname:
        type: string
    type: object
  objects.Thing:
    properties:
      id:
        type: integer
      markNumber:
        type: integer
      ownerID:
        type: integer
      roomID:
        type: integer
      thingType:
        type: string
    type: object
  objects.ThingResponseDTO:
    properties:
      mark-number:
        type: integer
      thing-type:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: Server for bmstu dormitory app.
  license: {}
  title: BMSTU-WEB API
  version: "1.0"
paths:
  /api/v1/rooms/:
    get:
      description: View full information about rooms in dormitory.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objects.ThingResponseDTO'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Get all rooms in dormitory
  /api/v1/students/:
    get:
      description: View full information about students have lived in dormitory.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objects.StudentResponseDTO'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Get all students in dormitory
    post:
      description: Add new student in user and student base.
      parameters:
      - description: student base information
        in: body
        name: user-params
        required: true
        schema:
          $ref: '#/definitions/models.AddNewStudentRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objects.Student'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Пользователь с таким логином уже существует!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Add new student to base
  /api/v1/students/{stud-number}/:
    get:
      description: View full information about student.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: View information about student
    put:
      description: Change in database group information about student.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      - description: New student group
        in: body
        name: new-group
        required: true
        schema:
          $ref: '#/definitions/models.ChangeStudentGroupRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Change student group for student
  /api/v1/students/{stud-number}/rooms/:
    delete:
      description: Settle student in certain room.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Студент уже нигде не живёт!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Evic student from current room
    post:
      description: Settle student in certain room.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      - description: New student room ID
        in: body
        name: room-id
        required: true
        schema:
          $ref: '#/definitions/models.SettleInRoomRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден" | "Комната не найдена
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Студент уже живёт в другой комнате!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Settle student in room
  /api/v1/students/{stud-number}/things/:
    get:
      description: View full information about all current things of student.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThingFullInfo'
        "400":
          description: Параметр не должен быть пустым.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Get student things
  /api/v1/students/{stud-number}/things/{mark-number}/:
    delete:
      description: Return thing from student without changing thing location.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      - description: Mark number of thing
        in: path
        name: mark-number
        required: true
        type: integer
      responses:
        "200":
          description: Вещь передана!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден" | "Вещь не найдена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь и так была не у студента!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Return thing from student.
    post:
      description: Give thing to student without changing its location.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      - description: Mark number of thing
        in: path
        name: mark-number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Вещь передана!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден" | "Вещь не найдена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь уже у другого студента!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Give thing to student
  /api/v1/things/:
    get:
      description: View full information about all things dormitory.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThingFullInfo'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Get all things in dormitory
    post:
      description: Add new thing with params in base.
      parameters:
      - description: body for buy service
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.AddNewThingRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Операция успешно проведена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь с таким же уникальным номером уже есть в базе
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Add new thing
  /api/v1/things/{mark-number}/:
    patch:
      description: Transfer thing to another room.
      parameters:
      - description: Thing mark number
        in: path
        name: mark-number
        required: true
        type: integer
      - description: Dst room in which thing will be transferred.
        in: body
        name: room-id
        required: true
        schema:
          $ref: '#/definitions/models.TransferThingRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Вещь успешно перемещена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Вещь не найдена" | "Комната не найдена
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь уже находится в этой комнате!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Transfer thing to another room.
  /api/v1/things/free/:
    get:
      description: View full information about free things (things without owner)
        .
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThingFullInfo'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Get all free things in dormitory
swagger: "2.0"
