definitions:
  models.AddNewStudentRequestMessage:
    properties:
      group:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      studentNumber:
        type: string
      surname:
        type: string
    type: object
  models.AddNewThingRequestMessage:
    properties:
      markNumber:
        type: integer
      thingType:
        type: string
    type: object
  models.ChangeStudentGroupRequestMessage:
    properties:
      newGroup:
        type: string
    type: object
  models.ResponseWithJWTMessage:
    properties:
      token:
        type: string
    type: object
  models.ShortResponseMessage:
    properties:
      comment:
        type: string
    type: object
  models.StudentHistoryResponseMessage:
    properties:
      room-id:
        type: integer
    type: object
  models.StudentLiveActsRequestMessage:
    properties:
      roomID:
        type: integer
      student-number:
        type: string
    type: object
  models.StudentThingsActsRequestMessage:
    properties:
      mark-number:
        type: integer
      status:
        type: string
      student-number:
        type: string
    type: object
  models.ThingFullInfo:
    properties:
      thing:
        $ref: '#/definitions/objects.Thing'
        type: object
    type: object
  models.ThingOwnerHistoryResponseMessage:
    properties:
      owner-student-number:
        type: string
    type: object
  models.TransferThingRequestMessage:
    properties:
      room-id:
        type: integer
    type: object
  objects.RoomResponseDTO:
    properties:
      room-id:
        type: integer
      room-number:
        type: integer
      room-type:
        type: string
    type: object
  objects.StudentResponseDTO:
    properties:
      name:
        type: string
      roomID:
        type: integer
      studentGroup:
        type: string
      studentNumber:
        type: string
      surname:
        type: string
    type: object
  objects.Thing:
    properties:
      id:
        type: integer
      markNumber:
        type: integer
      ownerID:
        type: integer
      roomID:
        type: integer
      thingType:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: Server for bmstu dormitory app.
  license: {}
  title: BMSTU-WEB API
  version: "1.0"
paths:
  /api/v1/login:
    get:
      description: Try to authorize in system. JWT-Token send with success
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseWithJWTMessage'
        "403":
          description: Пароль введен неверно!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      summary: Try to authorize in system
      tags:
      - auth
  /api/v1/rooms:
    get:
      description: View full information about rooms in dormitory.
      parameters:
      - description: Page param for pagination
        in: query
        name: page
        type: integer
      - description: Size param for pagination
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objects.RoomResponseDTO'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Get all rooms in dormitory
      tags:
      - rooms
  /api/v1/rooms/{room-id}:
    get:
      description: View information about room in dormitory.
      parameters:
      - description: Room id
        in: path
        name: room-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objects.RoomResponseDTO'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Комната не найдена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Get room information
      tags:
      - rooms
  /api/v1/student-live-acts:
    post:
      description: Settle/evic student in certain room.
      parameters:
      - description: Параметры запроса. Если roomID == 0, то студент выселяется.
        in: body
        name: requestParams
        required: true
        schema:
          $ref: '#/definitions/models.StudentLiveActsRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден" | "Комната не найдена
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Студент уже живёт в другой комнате!" | "Студент уже нигде не
            живёт!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Settle/evic student in dormitory
      tags:
      - students
  /api/v1/student-live-acts/{stud-number}:
    get:
      description: View history of student living.
      parameters:
      - description: Студенческий билет
        in: path
        name: stud-number
        required: true
        type: string
      - description: 'Параметр того, как выводить историю: текущую комнату(current)
          или общую историю перемещений (all)'
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StudentHistoryResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "501":
          description: Пока функционал на стадии реализации
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: View history of student living
      tags:
      - students
  /api/v1/student-things-acts:
    post:
      description: Give thing to student without changing its location.
      parameters:
      - description: 'Параметры запроса. У поля status 2 значения: give(выдать) и
          return (забрать)'
        in: body
        name: TransferParams
        required: true
        schema:
          $ref: '#/definitions/models.StudentThingsActsRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Вещь передана!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден" | "Вещь не найдена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь уже у другого студента!" | "Вещь и так не у студента.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Action with things by students
      tags:
      - students
  /api/v1/student-things-acts/{mark-number}:
    get:
      description: View history of thing owners
      parameters:
      - description: Маркировочный номер
        in: path
        name: mark-number
        required: true
        type: integer
      - description: 'Параметр того, как выводить историю: текущего владельца(current)
          или общую историю (all)'
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThingOwnerHistoryResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Вещь не найдена
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "501":
          description: Пока функционал на стадии реализации
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: View history of thing owners
      tags:
      - students
  /api/v1/students:
    get:
      description: View full information about students have lived in dormitory.
      parameters:
      - description: Page param for pagination
        in: query
        name: page
        type: integer
      - description: Size param for pagination
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objects.StudentResponseDTO'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Get all students in dormitory
      tags:
      - students
    post:
      description: Add new student in user and student base.
      parameters:
      - description: student base information
        in: body
        name: user-params
        required: true
        schema:
          $ref: '#/definitions/models.AddNewStudentRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Операция успешно проведена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Пользователь с таким логином уже существует!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Add new student to base
      tags:
      - students
  /api/v1/students/{stud-number}:
    get:
      description: View full information about student.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: View information about student
      tags:
      - students
    put:
      description: Change in database group information about student.
      parameters:
      - description: Student Number
        in: path
        name: stud-number
        required: true
        type: string
      - description: New student group
        in: body
        name: new-group
        required: true
        schema:
          $ref: '#/definitions/models.ChangeStudentGroupRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Данные о студенте успешно обновлены!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Change student group for student
      tags:
      - students
  /api/v1/things:
    get:
      description: Get full information about different things.
      parameters:
      - description: Page param for pagination
        in: query
        name: page
        type: integer
      - description: Size param for pagination
        in: query
        name: size
        type: integer
      - description: 'Status defines mode: all things, free things or student things.
          Possible values: all, free, student'
        in: query
        name: status
        type: string
      - description: Student number for searching in Student mode
        in: query
        name: stud-number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThingFullInfo'
        "400":
          description: Параметр не должен быть пустой" | "Параметры указаны неверно
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Студент не найден
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Get things in dormitory with params
      tags:
      - things
    post:
      description: Add new thing with params in base.
      parameters:
      - description: body for buy service
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.AddNewThingRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Операция успешно проведена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь с таким же уникальным номером уже есть в базе
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Add new thing
      tags:
      - things
  /api/v1/things/{mark-number}:
    get:
      description: Get full information about thing by mark-number.
      parameters:
      - description: Mark number for thing
        in: path
        name: mark-number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThingFullInfo'
        "400":
          description: Параметр не должен быть пустой" | "Параметры указаны неверно
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Вещь не найдена
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Get thing info
      tags:
      - things
    patch:
      description: Transfer thing to another room.
      parameters:
      - description: Thing mark number
        in: path
        name: mark-number
        required: true
        type: integer
      - description: Dst room in which thing will be transferred.
        in: body
        name: room-id
        required: true
        schema:
          $ref: '#/definitions/models.TransferThingRequestMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Вещь успешно перемещена!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "400":
          description: Параметр не должен быть пустой" | "Параметр должен быть числом!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "403":
          description: У вас нет достаточно прав!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "404":
          description: Вещь не найдена" | "Комната не найдена
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "422":
          description: Вещь уже находится в этой комнате!
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
        "500":
          description: Проблемы на стороне сервера.
          schema:
            $ref: '#/definitions/models.ShortResponseMessage'
      security:
      - JWT-Token: []
      summary: Transfer thing to another room.
      tags:
      - things
swagger: "2.0"
